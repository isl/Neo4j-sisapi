Copyright 2015 Institute of Computer Science,
               Foundation for Research and Technology - Hellas.

Licensed under the EUPL, Version 1.1 or - as soon they will be approved
by the European Commission - subsequent versions of the EUPL (the "Licence");
You may not use this work except in compliance with the Licence.
You may obtain a copy of the Licence at:

     http://ec.europa.eu/idabc/eupl

Unless required by applicable law or agreed to in writing, software distributed
under the Licence is distributed on an "AS IS" basis,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the Licence for the specific language governing permissions and limitations
under the Licence.

Contact:  POBox 1385, Heraklio Crete, GR-700 13 GREECE
Tel:+30-2810-391632
Fax: +30-2810-391638
E-mail: isl@ics.forth.gr
https://www.ics.forth.gr/isl/

Authors: Elias Tzortzakakis <tzortzak@ics.forth.gr>

This file is part of the Neo4j-sisapi project.

=============================================================================
Neo4j-sis-api 1.4 - numbering synchronization with THEMAS 1.4
=============================================================================
- Bug resolution related to backslash character in names
- No Generic model change - only some re-orderings for better grouping
- DocLint javadocs errors suppression
- ISL and CCI Website info updates

=============================================================================
Neo4j-sis-api 1.3 (pre-release of 2.0 handling git compilation error of THEMAS)
=============================================================================
- Reduced TMSApi Scope note complexity
- Abandoned TMSApi helper classes (HandleCommentsClass, PairInfo)
- Transliteration support for translations, used for terms, translation uf terms etc.
- Moved of specific and system tsv files in Neo4j-sis-api
- complexity reduction for Scopenotes, histroynotes, source_notes etc.
- External links addition (exact match/ close match) supported in XML/SKOS import/export operations 


=============================================================================
Neo4j-sis-api 1.2.1
=============================================================================
- Added function DeleteEmptyThesaurusModel function
  that removes the model of an empty thesaurus in order to 
  support the delete thesaurus operation.
- Added UniqueInDB label in specific TSV files in order to denote both that 
  this node should not be created once per thesaurus and that while searching the model 
  you should check before you delete these nodes, if they have other references 
  in the database from other thesauri.
- Sub packages re-structuring
    Merged packages "neo4j_sisapi" and "neo4j_sisapi.tmsapi" into "neo4j_sisapi"
    in order to be able to apply better separation of sisapi functions (QClass) 
    and thesaurus specific functions (TMSApiClass) such as DeleteEmptyThesaurus, 
    find by thesaurus referenceId etc. 
    (perhaps a further re-structuring process should follow as thesaurus specific
    properties like thesaurus reference id and transliteration are also propagated in
    QClass functions e.g. AddNode and more)  
	
=============================================================================
Neo4j-sis-api 1.2
=============================================================================
- Update to Java 8 / Neo4j 3.2.5 / Neo4j-sisapi 1.2 

- 2 new Properties "Transliteration" and "ThesaurusReferenceId" were added to Facets/TopTerms/Terms 
  Each thesaurus reference Id is unique per thesaurus and is stored and maintained as a property
  in the node with Logicalname the prefixed name of the Thesaurus (e.g. Thesaurus`THESNAME)

- Changes / additions built in order to support management of these 2 extra properties:
	- findLogicalNameByThesaurusReferenceId
	- set_current_node_and_retrieve_Cmv (where cmv has been augmented in order to include the 
	                                     thesaurus Reference Id and the transliteration)
	- resetCounter_For_ThesarusReferenceId
	- Included checking if thesaurus reference id is already assgined to other concept
	- get_matched_OnTransliteration (exact match or contains)
	- Included these property in TMSApi functions for creation/rename of term/hierarchy/Facet 

- Other changes include:
  - Moved to the api the functionality about creating database Indexes and constraints
  - started mechanism with error codes instead of direct hard coded messages (args is an issue)

=============================================================================
Neo4j-sis-api
=============================================================================

"Neo4j sis api" version 1.0 is a Java Application Program 
Interface that was built in order to communicate with a Neo4j 
open source graph database configured to store and manage 
thesauri data.


The underlying Neo4j Database works in embedded mode and 
the neo4j jar files used for the database access come from
the Neo4j graph database version 2.2.5 community edition.


The Data Model used in Neo4j database follows the Telos[1,2,3] 
language representational framework specifications where the 
following implementation decisions were made:

- One Neo4j Node is created for each of the 4 Telos building blocks 
  (Individual class, Individual Token, Attribute Class, Attribute Token)
  
- Each Node has one and unique Neo4j Id and one Logical name which is not
  necessarily unique

- Level and Type of each TELOS building block are stored as Neo4j Labels
  
- Instance Of, Isa, From and To relations from Telos are stored as Neo4j Relationships
  
- Primitive Values (and Types) are stored as Neo4j Properties in Attribute Nodes



[1] Mylopoulos, J., Borgida, A.T., Jarke, M., & Koubarakis, M. (1990). 
	TELOS : Representing Knowledge About Information Systems. 1990
	http://www.cs.toronto.edu/~jm/Pub/Telos.pdf
	http://www.ics.forth.gr/tech-reports/1990/1990.TR024_Representing_Knowledge_Information_Systems.pdf
		
[2] Koubarakis, M., Mylopoulos, J., Stanley, M., & Borgida, A.T. (1989). 
	Telos : Features and Formalization. 1989
	http://www.ics.forth.gr/tech-reports/1989/1989.TR018_TELOS_Features_Formalization.pdf	
	
[3] Koubarakis, M., Mylopoulos, J., Stanley, M., & Jarke, M. (1988). 
	Telos : A Knowledge Representation Language for Requirements Modelling. 1988
	http://www.ics.forth.gr/tech-reports/1988/1988.TR016_Language_TELOS.pdf


